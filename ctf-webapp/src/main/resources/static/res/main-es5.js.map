{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/rest.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","LoginComponent","client","login","username","password","formData","FormData","append","post","subscribe","response","window","location","href","error","submit","RegisterComponent","rest","payload","inviteCode","confirm","length","registerUser","result","alert","err","RestService","http","registration","toPromise","providedIn","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex justify-content-center\">\n    <div class=\"card\" style=\"width: 60%;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Yet Another Capture The Flag</h5>\n            <h6 class=\"card-subtitle mb-2 text-muted\">Don't worry, better name in progress</h6>\n            <p class=\"card-text\">This is an experimental CTF platform, and we will see where it will go. If you want to help/support us, just drop me an email. </p>\n\n\n        </div>\n    </div>\n</div>","import { AboutComponent } from './about/about.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'about', component: AboutComponent }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ctf-index';\n}\n","<ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\n    <li [ngbNavItem]=\"1\">\n        <a routerLink=\"/login\" ngbNavLink>Login</a>\n\n    </li>\n    <li [ngbNavItem]=\"2\"><a routerLink=\"/register\" ngbNavLink>Register</a></li>\n    <li [ngbNavItem]=\"3\"><a routerLink=\"/about\" ngbNavLink>About</a></li>\n</ul>\n\n\n<div role=\"main\">\n\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private client: HttpClient) { }\n\n  login = {\n    username :\"\",\n    password :\"\" }\n\n  ngOnInit(): void {\n  }\n\n  submit(){\n    var formData: any = new FormData();\n    formData.append(\"username\", this.login.username);\n    formData.append(\"password\", this.login.password);\n  \n    this.client.post('login', formData).subscribe(\n      (response) => window.location.href=\"/app/index.html\",\n      (error) => window.location.href=\"/app/index.html\"\n    )\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n    <div class=\"card\" style=\"width: 60%;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Login</h5>\n\n            <div class=\"mb-3\">\n                <label for=\"username\" class=\"form-label\">Email address</label>\n                <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" aria-describedby=\"emailHelp\" [(ngModel)]=\"login.username\">\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"login.password\">\n            </div>\n\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Login</button>\n\n        </div>\n    </div>\n</div>","import { RestService } from './../rest.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private rest: RestService) { }\n\n  payload = {\n    inviteCode : \"\",\n    password : \"\",\n    username :\"\"\n  }\n\n  confirm = \"\";\n\n  ngOnInit(): void {\n  }\n\n  isValid(){\n  if (this.payload.inviteCode.length ==0){\n    return false;\n  }\n  if (this.payload.username.length ==0){\n    return false;\n  }\n  if (this.payload.password.length ==0){\n    return false;\n  }\n\n  if (this.payload.password !==this.confirm){\n    return false;\n  }\n\n  return true;\n  }\n\n  submit(){\n    this.rest.registerUser(this.payload).then(result =>  alert(\"Yey, now you can log in!\")).catch(err=> alert(\"Something went wrong, feel free to yell and panic\"!))\n\n \n  }\n}\n","<div class=\"d-flex justify-content-center\">\n    <div class=\"card\" style=\"width: 60%;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Register</h5>\n\n            <p class=\"card-text\">Currently we are invite only, so please be patient. </p>\n\n            <p class=\"card-text\">If you have valid invite code, you can fill the form below.</p>\n\n            <hr/>\n            <div class=\"mb-3\">\n                <label for=\"inviteCode\" class=\"form-label\">Invite code</label>\n                <input type=\"text\" class=\"form-control\" id=\"inviteCode\" aria-describedby=\"inviteCodeHelp\" [(ngModel)]=\"payload.inviteCode\">\n                <div id=\"inviteCodeHelp\" class=\"form-text\">Type invite code that you received from another member.</div>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"inputEmail\" class=\"form-label\">Email address</label>\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" [(ngModel)]=\"payload.username\">\n                <div id=\"emailHelp\" class=\"form-text\">Don't worry, we are too lazy to share it with others.</div>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"inputPassword\" class=\"form-label\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"inputPassword\" [(ngModel)]=\"payload.password\">\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"confirmPassword\" class=\"form-label\">Confirm password</label>\n                <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" [(ngModel)]=\"confirm\">\n            </div>\n            <button type=\"button\" [disabled]=\"!isValid()\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\n\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  constructor(private http: HttpClient) { }\n\n  async  registerUser(registration: any){\n    return await this.http.post(\"/userAPI/register\", registration).toPromise();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}